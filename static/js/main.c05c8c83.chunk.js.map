{"version":3,"sources":["components/AddTodo.js","components/layout/Header.js","components/TodoItem.js","components/Todos.js","components/layout/Footer.js","store/containers/Footer.js","store/actions/changeThemeAction.js","components/TodoApp.js","store/reducers/themeReducer.js","store/reducers/index.js","index.js"],"names":["AddTodo","props","useState","title","setTitle","className","onSubmit","e","preventDefault","handleAddTodo","type","placeholder","value","onChange","target","Header","React","Component","TodoItem","this","todo","id","completed","checked","handleChange","onClick","handleDelete","Todos","todos","map","Footer","submitThemeColor","bind","nextprops","console","log","JSON","stringify","document","documentElement","style","setProperty","themeColor","color","saveColorTheme","connect","state","dispatch","payload","saveTheme","TodoApp","setState","useEffect","axios","get","params","_limit","then","res","data","newTodo","post","delete","filter","initState","combineReducers","action","Object","assign","store","createStore","rootReducer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c05c8c83.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction AddTodo(props) {\n  const [title, setTitle] = useState(\"\");\n\n  const onInputChange = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const addTodo = (e) => {\n    e.preventDefault();\n    props.handleAddTodo(title);\n    setTitle(\"\");\n  };\n\n  return (\n    <form className=\"form-container\" onSubmit={addTodo}>\n      <input\n        type=\"text\"\n        placeholder=\"Add Todo...\"\n        className=\"input-text\"\n        value={title}\n        onChange={onInputChange}\n      />\n      <input type=\"submit\" value=\"Submit\" className=\"input-submit\" />\n    </form>\n  );\n}\n\nexport default AddTodo;\n","import React from \"react\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header className=\"header-container\">\n        <h1 className=\"header-title\">Simple Todo App</h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\n\nclass TodoItem extends React.Component {\n  render() {\n    const { id, title, completed } = this.props.todo;\n\n    return (\n      <li className=\"todo-item\">\n        <input\n          type=\"checkbox\"\n          checked={completed}\n          onChange={() => this.props.handleChange(id)}\n        />\n        <span className={completed ? \"completed\" : null}>{title}</span>\n        <button\n          className=\"btn-style\"\n          onClick={() => this.props.handleDelete(id)}\n        >\n          {\" \"}\n          X{\" \"}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default TodoItem;\n","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nclass Todos extends React.Component {\n  render() {\n    return (\n      <div>\n        <ul>\n          {this.props.todos.map((todo) => (\n            <TodoItem\n              key={todo.id}\n              todo={todo}\n              handleChange={this.props.handleChange}\n              handleDelete={this.props.handleDelete}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Todos;\n","import React from \"react\";\n\nconst RED = \"#ff0000\";\nconst BLUE = \"#0000ff\";\nconst GRAY = \"#678c89\";\n\nclass Footer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submitThemeColor = this.submitThemeColor.bind(this);\n  }\n\n  componentWillReceiveProps(nextprops) {\n    console.log(\"UNSAFE_componentWillReceiveProps: \" + JSON.stringify(nextprops));\n    document.documentElement.style.setProperty(\"--main-color\", nextprops.themeColor.color)\n  }\n\n  submitThemeColor(color) {\n    if (color) {\n      console.log(\"handleChangeTheme\");\n      this.props.saveColorTheme(color);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"footer\">\n        <div className=\"vertical-center\">\n          <span>Choose Theme </span>\n          <button\n            onClick={() => this.submitThemeColor(RED)}\n            className=\"dot red\"\n          />\n          <button\n            onClick={() => this.submitThemeColor(BLUE)}\n            className=\"dot blue\"\n          />\n          <button\n            onClick={() => this.submitThemeColor(GRAY)}\n            className=\"dot gray\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import { connect } from \"react-redux\";\nimport { saveTheme } from \"../actions/changeThemeAction\";\nimport Footer from \"../../components/layout/Footer\";\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatch,\n  saveColorTheme: (color) => dispatch(saveTheme(color)),\n});\n\nconst mapStateToProps = (state) => ({\n  themeColor: state.color,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);\n","export const saveTheme = color => ({\n  type: \"CHANGE_THEME\",\n  payload: {\n    color,\n  }\n})","import React, { useState, useEffect } from \"react\";\nimport AddTodo from \"./AddTodo\";\nimport Header from \"./layout/Header\";\nimport Todos from \"./Todos\";\nimport axios from \"axios\";\nimport Footer from \"../store/containers/Footer\";\n\nfunction TodoApp() {\n  const [state, setState] = useState({\n    todos: [],\n  });\n\n  useEffect(() => {\n    const config = {\n      params: {\n        _limit: 5,\n      },\n    };\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/todos\", config)\n      .then((res) => setState({ todos: res.data }));\n  }, []);\n\n  const handleCheckboxChange = (id) => {\n    setState({\n      todos: state.todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      }),\n    });\n  };\n\n  const deleteTodo = (id) => {\n    axios\n      .delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n      .then((res) =>\n        setState({\n          todos: [...state.todos.filter((todo) => todo.id !== id)],\n        })\n      );\n  };\n\n  const addTodo = (title) => {\n    const newTodo = {\n      title: title,\n      completed: false,\n    };\n\n    axios\n      .post(\"https://jsonplaceholder.typicode.com/todos\", newTodo)\n      .then((res) => {\n        setState({\n          todos: [...state.todos, res.data],\n        });\n      });\n  };\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <AddTodo handleAddTodo={addTodo} />\n      <Todos\n        todos={state.todos}\n        handleChange={handleCheckboxChange}\n        handleDelete={deleteTodo}\n      />\n      <Footer />\n    </div>\n  );\n}\n\nexport default TodoApp;\n","let initState = {\n  color: \"#FFFFFF\",\n};\n\nexport default function themeReducer(state = initState, action) {\n  switch (action.type) {\n    case \"CHANGE_THEME\":\n      console.log(\"themeReducer: \" + JSON.stringify(state));\n      return Object.assign({}, state, {\n        color: action.payload.color,\n      });\n    default:\n      return initState;\n  }\n}\n","import {combineReducers} from 'redux';\nimport color from './themeReducer';\n\nexport default combineReducers({\n  color\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport TodoApp from './components/TodoApp';\n\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport rootReducer from './store/reducers'\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <TodoApp />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}